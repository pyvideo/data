{
    "copyright_text": "CC BY",
    "description": "This is a talk about how to develop a game in Python such that you'll be\nable to take a cool idea all the way to a Steam release.\n\nNearly every talk about game dev tools will introduce the tool (such as\npygame) and conclude with a minimal example (\"press the arrow keys to\nmove the square\"). This talk isn\u2019t about moving a square; it\u2019s about\neverything else. More specifically, it's a talk about everything else\n*in Python*. I've made three Python games and several others in other\nlanguages--in this talk, I will explain why Python is often the *best*\ntool for gamemaking.\n\nI made a procedurally-generated monster collecting game in Python that I\nreleased on itch.io and Steam. This talk is about how I made decisions\nover the course of nine months to ensure that development was fast,\ntesting was robust, graphical effects were weird, and gameplay was fun.\n",
    "language": "eng",
    "recorded": "2024-05-17",
    "related_urls": [
        {
            "label": "Conference Website",
            "url": "https://us.pycon.org/2024/"
        },
        {
            "label": "Presentation Webpage",
            "url": "https://us.pycon.org/2024/schedule/presentation/76/"
        }
    ],
    "speakers": [
        "Esther Alter"
    ],
    "title": "Procedurally Generated Monsters! A complete example of Python game development"
}