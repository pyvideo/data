{
    "copyright_text": "CC BY",
    "description": "CPython is a programming language implementation that is mostly\nmaintained by volunteers, but has a huge, diverse user base spread\nacross a wide variety of platforms. These factors present a difficult\nset of challenges and tradeoffs when making design decisions, especially\nthose related to just-in-time machine code generation.\n\nAs one of the engineers working on Microsoft's ambitious \"Faster\nCPython\" project, I'll introduce our prototype of \"copy-and-patch\", an\ninteresting technique for generating high-quality template JIT\ncompilers. Along the way, I'll also cover some of the important work in\nrecent CPython releases that this approach builds upon, and how\ncopy-and-patch promises to be an incredibly attractive tool for pushing\nPython's performance forward in a scalable, maintainable way.\n",
    "language": "eng",
    "recorded": "2024-05-19",
    "related_urls": [
        {
            "label": "Conference Website",
            "url": "https://us.pycon.org/2024/"
        },
        {
            "label": "Presentation Webpage",
            "url": "https://us.pycon.org/2024/schedule/presentation/124/"
        }
    ],
    "speakers": [
        "Brandt Bucher"
    ],
    "thumbnail_url": "https://i.ytimg.com/vi/wr0fVU3Ajwc/hqdefault.jpg",
    "title": "Building a JIT compiler for CPython",
    "videos": [
        {
            "type": "youtube",
            "url": "https://www.youtube.com/watch?v=wr0fVU3Ajwc"
        }
    ]
}