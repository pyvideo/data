{
    "copyright_text": "CC BY",
    "description": "Remember pointers from C/C++? Why don\u2019t we add them to Python? Make any\nPython object mutable by manipulating it directly in memory through the\npointer as you would do in C/C++. Why do this? Well, pointers have no\nuse in Python, but the point is not implementation itself, but all the\ninternal parts of Python programming language that you will touch while\nimplementing it. What you will learn:\n\n-  How to add new piece of syntax to Python. We will implement ``&`` and\n   ``*`` (address of and dereference) operators just like in C/C++.\n-  How to add custom builtin object. Adding new syntax has to do\n   something, right? In our case it will operate on new ``pointer``\n   builtin object.\n-  Internal layout of Python objects.\n-  How to make our ``pointer`` object behave well. Everything in Python\n   is an object and every object internally has to make sure it\u2019s\n   lifecycle does not cause any issues and your program works in a\n   predictable way.\n-  How to do something with new object. Having new syntax and object is\n   cool, but it has to interact with other objects somehow. Remember\n   double underscore methods like ``__add__`` and ``__eq__``? We will\n   see how they are implemented internally and our object will have\n   them.\n-  How Python objects are garbage collected. Our ``pointer`` object will\n   cover all ways Python objects can be garbage collected and all tricky\n   parts of this process. These involve reference counting and tracing\n   garbage collector for cyclic objects.\n-  And many more.\n\nOptional: to minimise chances of inconsistencies, it is recommended to\nhave Docker installed\n",
    "language": "eng",
    "recorded": "2024-05-16",
    "related_urls": [
        {
            "label": "Conference Website",
            "url": "https://us.pycon.org/2024/"
        },
        {
            "label": "Presentation Webpage",
            "url": "https://us.pycon.org/2024/schedule/presentation/80/"
        }
    ],
    "speakers": [
        "Yan Yanchii"
    ],
    "thumbnail_url": "https://i.ytimg.com/vi/YepFiwhK3d8/hqdefault.jpg",
    "title": "Pointers in Python",
    "videos": [
        {
            "type": "youtube",
            "url": "https://www.youtube.com/watch?v=YepFiwhK3d8"
        }
    ]
}