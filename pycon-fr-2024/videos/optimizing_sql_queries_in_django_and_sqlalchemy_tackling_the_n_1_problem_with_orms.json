{
  "title": "Optimizing SQL Queries in Django and SQLAlchemy: Tackling the N+1 Problem with ORMs",
  "description": "In this talk, we will introduce the N+1 query problem, a common pitfall encountered when using Object-Relational Mappers (ORMs) like Django's ORM and SQLAlchemy. We'll see how ORMs simplify our lives compared to maintaining raw SQL queries.\r\n\r\nWe'll demonstrate how to debug the SQL queries generated by the ORM.\r\n\r\nWe'll explain the concept of lazy loading in ORMs and how it can lead to the N+1 query problem if we're not careful. Using a practical example of a CRUD application, we'll show how lazy loading can result in multiple SQL queries, thus degrading performance.\r\n\r\nWe will then provide a solution to the N+1 problem by using the select_related method in Django or joinedLoad in SQLAlchemy to optimize query performance, reducing the number of SQL queries to just one.\r\n\r\nAdditionally, we'll introduce Django's CaptureQueriesContext and get_record_queries from Flask-SQLAlchemy, tools that can be used in unit tests to ensure that our application remains optimized as it evolves, preventing regressions related to N+1 queries.",
  "duration": 3421,
  "language": "eng",
  "recorded": "2024-11-02",
  "speakers": [
    "Carmen Alvarez"
  ],
  "videos": [
    {
      "type": "mp4",
      "url": "https://dl.afpy.org/pycon-fr-24/optimizing_sql_queries_in_django_and_sqlalchemy_tackling_the_n_1_problem_with_orms.mp4",
      "size": 362380769
    },
    {
      "type": "peertube",
      "url": "https://indymotion.fr/videos/watch/f954fe54-541c-46d8-ac0d-5c15722dbfb6"
    }
  ],
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://www.pycon.fr/2024/fr/schedule.html"
    }
  ],
  "thumbnail_url": "https://indymotion.fr/lazy-static/thumbnails/6328a5a9-ad2d-460e-a223-7f7625e3023f.jpg"
}