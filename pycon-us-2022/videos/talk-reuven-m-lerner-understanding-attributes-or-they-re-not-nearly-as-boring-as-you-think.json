{
  "copyright_text": "CC BY",
  "description": "Attributes in Python, which we use dozens of times each day, seem boring, obvious, and not worthy of attention. But it turns out that they're key to the Python language: Every time you say a.b in Python, that little dot is hiding a lot of work, from searching across multiple objects to silently rewriting things. And it turns out that what happens with attributes, while not always obvious to developers, determines a great deal of behavior in the Python language.\n\nIn this talk, I'll discuss what attributes are (and aren't), what Python does when you use a dot (.) in your code, and how you can take advantage of it. We'll talk about attribute lookup, about inheritance, and about methods vs. functions. We'll also look into properties, and how they allow us to have attributes that look like data but behave like setters and getters. Finally, we'll look at the descriptor protocol, which makes so much of Python's functionality possible, including the automatic insertion of \"self\" as the first argument in method calls.",
  "duration": 2259,
  "language": "eng",
  "recorded": "2022-04-27",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://us.pycon.org/2022/schedule/"
    },
    {
      "label": "Slides",
      "url": "https://pycon-assets.s3.amazonaws.com/2022/media/presentation_slides/22/2022-05-01T04%3A08%3A16.996945/Presentation__Python_attributes.key.pdf"
    }
  ],
  "speakers": [
    "Reuven M. Lerner"
  ],
  "tags": [
    "talk"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/Tn1wLsj7Bys/maxresdefault.jpg",
  "title": "Understanding attributes (Or: They're not nearly as boring as you think!)",
  "videos": [
    {
      "length": 2259,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=Tn1wLsj7Bys"
    }
  ]
}
