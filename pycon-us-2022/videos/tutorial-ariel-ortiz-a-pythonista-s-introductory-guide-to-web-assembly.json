{
  "copyright_text": "CC BY",
  "description": "Wasm is a binary code format specification first released in 2017. This technology can be implemented in web browsers or standalone applications in a secure, open, portable, and efficient fashion. More precisely, Wasm is an intermediate language for a stack-based virtual machine that uses a just-in-time (JIT) compiler to produce native machine code. Although Wasm was primarily designed as a compilation target for languages such as C/C++ or Rust, it can be integrated with Python in interesting ways. And that\u2019s what we\u2019ll be focusing on during this tutorial. Some experience with JavaScript and web development might come in handy but is not strictly required. At the end, we\u2019ll show how to develop a tiny compiler that has Wasm as it\u2019s compilation target.",
  "duration": 10040,
  "language": "eng",
  "recorded": "2022-04-27",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://us.pycon.org/2022/schedule/"
    },
    {
      "label": "Slides",
      "url": "https://pycon-assets.s3.amazonaws.com/2022/media/presentation_slides/53/2022-05-05T23%3A36%3A12.746488/webassembly_tutorial.pdf"
    }
  ],
  "speakers": [
    "Ariel Ortiz"
  ],
  "tags": [
    "tutorial"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/NOAZuGFhfV0/hqdefault.jpg",
  "title": "A Pythonista's Introductory Guide to Web Assembly",
  "videos": [
    {
      "length": 10040,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=NOAZuGFhfV0"
    }
  ]
}
