{
  "copyright_text": "CC BY",
  "description": "Everybody gets frustrated when web apps are broken, but testing them thoroughly doesn't need to be a chore. Playwright, a new open-source browser automation tool from Microsoft, makes testing web apps fun! Playwright outperforms other tools like Selenium WebDriver with a slew of nifty features like automatic waiting, mobile emulation, and network interception. Plus, with isolated browser contexts, Playwright tests can set up much faster than traditional Web UI tests.\n\nIn this tutorial, we will build a Python test automation project from the ground up. We will automate web search engine tests together step-by-step using Playwright for interactions and pytest for execution.\n\nSpecifically, we will cover:\n\n1. How to install and configure Playwright\n2. How to integrate Playwright with pytest, Python\u2019s leading test framework\n3. How to perform interactions through page objects\n4. How to conveniently run different browsers, capture videos, and run tests in parallel\n\nBy the end of this tutorial, you'll be empowered to test modern web apps with modern web test tools. You'll also have an example project to be the foundation for your future tests. You can use Playwright to test Django apps, Flask apps, or any other kinds of apps!",
  "duration": 11711,
  "language": "eng",
  "recorded": "2022-04-27",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://us.pycon.org/2022/schedule/"
    }
  ],
  "speakers": [
    "Pandy Knight"
  ],
  "tags": [
    "tutorial"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/JEll871aplI/hqdefault.jpg",
  "title": "Awesome Modern Web Testing with Playwright",
  "videos": [
    {
      "length": 11711,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=JEll871aplI"
    }
  ]
}
