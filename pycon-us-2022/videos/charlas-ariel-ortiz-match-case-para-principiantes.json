{
  "copyright_text": "CC BY",
  "description": "Python ha carecido durante mucho tiempo de un mecanismo de control de flujo condicional presente en muchos otros lenguajes de programaci\u00f3n, algo que permita tomar un valor y compararlo de manera directa y sencilla contra varias opciones. El lenguaje C y sus derivados cuentan con la instrucci\u00f3n switch/case. Otros lenguajes tienen un soporte m\u00e1s sofisticado de pattern matching. Las formas tradicionales para lograr un comportamiento equivalente en Python no eran del todo elegantes. Una opci\u00f3n era escribir una cadena de expresiones if/elif/else. Una segunda opci\u00f3n era utilizar un diccionario con llaves asociadas a funciones. En general esto funciona adecuadamente, pero puede ser complicado de construir, entender y mantener.\n\nDespu\u00e9s de varias propuestas fallidas para agregar una sintaxis tipo switch/case a Python, se acept\u00f3 finalmente una propuesta reciente para Python 3.10: structural pattern matching (b\u00fasquedas de coincidencias de patrones estructurales). Este esquema de pattern matching no solo hace posible realizar coincidencias simples de estilos de switch/case, sino que tambi\u00e9n admite una gama m\u00e1s amplia de casos de uso. En esta charla se mostrar\u00e1 c\u00f3mo aprovechar en nuestros programas esta nueva facilidad.",
  "duration": 2495,
  "language": "spa",
  "recorded": "2022-04-27",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://us.pycon.org/2022/schedule/"
    }
  ],
  "speakers": [
    "Ariel Ortiz"
  ],
  "tags": [
    "charla"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/uCtcFi-L5PM/hqdefault.jpg",
  "title": "Match case para principiantes",
  "videos": [
    {
      "length": 2495,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=uCtcFi-L5PM"
    }
  ]
}
