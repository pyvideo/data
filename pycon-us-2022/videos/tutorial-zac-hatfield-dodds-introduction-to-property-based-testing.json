{
  "copyright_text": "CC BY",
  "description": "Has testing got you down? Ever spent a day writing tests, only to discover that you missed a bug because of some edge case you didn\u2019t know about? Does it ever feel like writing tests is just a formality - that you already know your test cases will pass?\n\nProperty-based testing might be just what you need!\n\nAfter this introduction to property-based testing, you\u2019ll be comfortable with Hypothesis, a friendly but powerful property-based testing library. You\u2019ll also known how to check and enforce robust properties in your code, and will have hands-on experience finding real bugs.\n\nWhere traditional example-based tests require you to write out each exact scenario to check - for example, assert divide(3, 4) == 0.75 - property-based tests are generalised and assisted. You describe what kinds of inputs are allowed, write a test that should pass for any of them, and Hypothesis does the rest!\n\n    from hypothesis import given, strategies as st\n\n    @given(a=st.integers(), b=st.integers())\n    def test_divide(a, b):\n    result = a / b\n    assert a == b * result\n\nThere\u2019s the obvious ZeroDivisionError, fixable with b = st.integers().filter(lambda b: b != 0), but there\u2019s another bug lurking. Can you see it? Hypothesis can!\n\nAUDIENCE\n\nThis tutorial is for anybody who regularly writes tests in Python, and would like an easier and more effective way to do so. We assume that you are comfortable with traditional unit tests - reading, running, and writing; as well as familar with ideas like assertions. Most attendees will have heard \"given, when, then\" and \"arrange, act, assert\". You may or may not have heard of pre- and post-conditions - we will explain what \"property-based\" means without reference to Haskell or anything algebraic.",
  "duration": 5059,
  "language": "eng",
  "recorded": "2022-04-27",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://us.pycon.org/2022/schedule/"
    },
    {
      "label": "Slides",
      "url": "https://pycon-assets.s3.amazonaws.com/2022/media/presentation_slides/177/2022-04-26T04%3A34%3A57.242477/PBT-intro-PyCon-2022.pdf"
    }
  ],
  "speakers": [
    "Zac Hatfield-Dodds"
  ],
  "tags": [
    "tutorial"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/6Hdn8hBw_Gs/hqdefault.jpg",
  "title": "Introduction to Property Based Testing",
  "videos": [
    {
      "length": 5059,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=6Hdn8hBw_Gs"
    }
  ]
}
