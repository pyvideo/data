{
    "description": "What if I told you that you could write simpler tests but get better results?\n\nWhat if I told you can automatically generate your test data?\n\nThis may sound difficult to your traditional testing approach but can be easily done with Hypothesis, the Python library used for property-based testing.\n\nThis is an introductory talk about property-based testing. The talk requires some previous knowledge about testing to make the most out of it but if you are new and curious I think you would get something out of it.\n\nThe talk approaches a simple problem from two different testing perspectives. Giving you an idea about property-based testing and how it\u2019s different from the traditional approach with Python. \n\nThe main focus of the topic would be Hypothesis and how you can achieve your testing goals with it. \n\nBy the end of this talk you would have a solid understanding of property-based testing with Hypothesis, that would help you decide which testing approach fits your need. \n\nGiven below is a rough overview of the talk structure:\n  The testing problem. \n  The traditional approach.\n  Cons of traditional approach.\n  What property-based testing.\n  Intro to Hypothesis. \n  Same problem solution with Hypothesis.\n  Why choose Hypothesis as a go-to property based testing tool.\n  Parameterized testing with Pytest vs Hypothesis approach. \n  When or when not to use property based testing. \n  How you can adopt `hypothesis` in your code base.",
    "language": "eng",
    "recorded": "2022-09-17",
    "related_urls": [
        {
            "label": "Conference Website",
            "url": "https://2022.pyconuk.org/"
        }
    ],
    "speakers": [
        "Emma Saroyan"
    ],
    "thumbnail_url": "https://i.ytimg.com/vi/CBZkgR6a1IM/hqdefault.jpg",
    "title": "Property-Based Testing the Python Way",
    "videos": [
        {
            "type": "youtube",
            "url": "https://www.youtube.com/watch?v=CBZkgR6a1IM"
        }
    ]
}