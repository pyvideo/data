{
  "description": "In this talk, we will explore the use of Python's typing.Protocol, Scala's Typeclasses, and Rust's Traits.\nThey all offer a very powerful & elegant mechanism for abstracting over various concepts (such as Serialization) in a modular manner.\nWe will compare and contrast the syntax and implementation of these constructs in each language and discuss their strengths and weaknesses. We will also look at real-world examples of how these features are used in each language to specify behavior, and consider differences in terms of type system expressiveness and effectiveness. By the end of the talk, attendees will have a better understanding of the differences and similarities between these three language features, and will be able to make informed decisions about which one is best suited for their needs.\n\nLink to the slides: https://github.com/koljamaier/specifying-behaviour/tree/main/docs",
  "duration": 1767,
  "language": "eng",
  "recorded": "2023-04-17",
  "related_urls": [
    {
      "label": "Conference Website",
      "url": "https://2023.pycon.de/"
    },
    {
      "label": "https://github.com/koljamaier/specifying-behaviour/tree/main/docs",
      "url": "https://github.com/koljamaier/specifying-behaviour/tree/main/docs"
    }
  ],
  "speakers": [
    "TODO"
  ],
  "tags": [
    "Education",
    "Julia",
    "NumFOCUS",
    "Opensource",
    "PyData",
    "Python",
    "Tutorial",
    "coding",
    "how to program",
    "learn",
    "learn to code",
    "python 3",
    "scientific programming",
    "software"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/CD-T0NZh-vE/maxresdefault.jpg",
  "title": "Kolja Maier:  Specifying behavior with Protocols, Typeclasses or Traits. Who wears it better?",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=CD-T0NZh-vE"
    }
  ]
}
