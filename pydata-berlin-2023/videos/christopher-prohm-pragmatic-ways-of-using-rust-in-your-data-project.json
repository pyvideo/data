{
  "description": "Writing efficient data pipelines in Python can be tricky. The standard recommendation is to use vectorized functions implemented in Numpy, Pandas, or the like. However, what to do, when the processing task does not fit these libraries? Using plain Python for processing can result in lacking performance, in particular when handling large data sets.\n\nRust is a modern, performance-oriented programming language that is already widely used by the Python community. Augmenting data processing steps with Rust can result in substantial speed ups. In this talk will present strategies of using Rust in a larger Python data processing pipeline with a particular focus on pragmatism and minimizing integration efforts.",
  "duration": 1812,
  "language": "eng",
  "recorded": "2023-04-17",
  "related_urls": [
    {
      "label": "Conference Website",
      "url": "https://2023.pycon.de/"
    }
  ],
  "speakers": [
    "TODO"
  ],
  "tags": [
    "Education",
    "Julia",
    "NumFOCUS",
    "Opensource",
    "PyData",
    "Python",
    "Tutorial",
    "coding",
    "how to program",
    "learn",
    "learn to code",
    "python 3",
    "scientific programming",
    "software"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/Jk9NXfvgclU/maxresdefault.jpg",
  "title": "Christopher Prohm: Pragmatic ways of using Rust in your data project",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=Jk9NXfvgclU"
    }
  ]
}
