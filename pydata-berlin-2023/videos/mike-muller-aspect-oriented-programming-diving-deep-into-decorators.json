{
  "description": "The aspect-oriented programming paradigm can support the separation of\ncross-cutting concerns such as logging, caching, or checking of permissions. This can improve code modularity and maintainability.\nPython offers decorator to implement re-usable code for cross-cutting task.\n\nThis tutorial is an in-depth introduction to decorators.\nIt covers the usage of decorators and how to implement simple and more advanced decorators. Use cases demonstrate how to work with decorators.\nIn addition to showing how functions can use closures to create decorators,\nthe tutorial introduces callable class instance as alternative.\nClass decorators can solve problems that use be to be tasks for metaclasses. The tutorial provides uses cases for class decorators.\n\nWhile the focus is on best practices and practical applications, the tutorial\nalso provides deeper insight into how Python works behind the scene.\nAfter the tutorial participants will feel comfortable with functions that take\nfunctions and return new functions.",
  "duration": 5446,
  "language": "eng",
  "recorded": "2023-04-17",
  "related_urls": [
    {
      "label": "Conference Website",
      "url": "https://2023.pycon.de/"
    }
  ],
  "speakers": [
    "TODO"
  ],
  "tags": [
    "Education",
    "Julia",
    "NumFOCUS",
    "Opensource",
    "PyData",
    "Python",
    "Tutorial",
    "coding",
    "how to program",
    "learn",
    "learn to code",
    "python 3",
    "scientific programming",
    "software"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/BunOdvHCEGw/maxresdefault.jpg",
  "title": "Mike M\u00fcller: Aspect-oriented Programming - Diving deep into Decorators",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=BunOdvHCEGw"
    }
  ]
}
