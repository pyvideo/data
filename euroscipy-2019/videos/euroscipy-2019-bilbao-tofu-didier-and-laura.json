{
  "description": "| Nuclear fusion comes along with great promises of almost limitless\n  energy with little risks and waste. But it also comes with significant\n  scientific and technological complexities. Decades of efforts may find\n  an echo in ITER, an international tokamak being built to address this\n  challenge. A tokamak is a particular kind of advanced experimental\n  nuclear fusion reactor. It is a torus-shaped vacuum vessel in which a\n  hydrogen plasma of very low density is heated up to temperatures\n  (10-100 millions of degrees Celsius) allowing nuclear fusion reactions\n  to occur. The torus-shaped plasma radiates light, which is measured in\n  various wavelength domains by dedicated sets of detectors (called\n  diagnostics), like 2D cameras observing visible light, 1D arrangements\n  of diodes sensitive to X-rays, ultra-violet spectrometers... Due to\n  the torus shape, the plasma is axisymmetric, and like in medical\n  imaging, tomography methods can be used to diagnose the light radiated\n  in a plasma cross-section.\n| For all diagnostics, one can seek to solve the direct or the inverse\n  problem. The direct problem consists in computing the measurements\n  from a known plasma light emissivity, provided by a plasma simulation\n  for example.\n| The inverse problem consists in computing the plasma light emissivity\n  from experimental measurements. The algorithms involved in solving\n  both the direct and inverse problem are very similar, no matter the\n  wavelength domain.\n\nLike many, the fusion community tends to suffer from a lack of\nreproducibility of the results it publishes. This problem is\nparticularly acute in the case of tomography diagnostics since the\ninverse problem is ill-posed and the solution unicity is not guaranteed.\nThere are also many possible simplifying hypotheses that may, or may\nnot, be relevant for each diagnostic. In this regard, the historical\nuses of the community display a large variety of single-user black- box\ncodes, each typically designed by a student, and often forgotten or left\nas is until a new student is hired and starts all over again.\n\n| In this context, a machine-independent, open-source and documented\n  python library, ToFu, was started to provide the fusion community with\n  a common and free reference tool.\n| We thus aim at improving reproducibility by providing a known and\n  transparent tool, able to efficiently solve both the direct and\n  inverse problem for tomography diagnostics. It can use very simple\n  hypothesis or very complete diagnostics descriptions alike, one of the\n  ideas being that it should allow users to perform accurate\n  calculations easily, sparing them the need to simplify hypotheses that\n  are not always valid.\n\n| A zero version of tofu, fully operational but not user-friendly\n  enough, was first developed between 2014 and 2016 when it was used for\n  published results. Strong with this first proof of principle, a\n  significant effort was initiated in 2017 to completely re-write the\n  code with a stronger emphasis on python community standards (PEP8),\n  version control (Github), performance (cython), packaging (pip and\n  conda), continuous integration (nosetests and travis), modularity\n  (architecture refurbishing), user-friendliness (renamings, utility\n  tools) and object-oriented coding (class inheritance).\n| This effort is still ongoing to this day and is scheduled to go on for\n  the next 2.5 years. However, the first milestones have been reached,\n  and we would like to present the first re-written modules to the\n  python community, for publicity, advice, feedback, mutually enriching\n  exchanges and more generally because we feel tofu is part of the large\n  open-source python scientific community.\n\nThe code is composed of several modules: a geometry module, a data\nvisualization module, a meshing module, and an inversion module. We will\npresent the geometry module (containing ray-tracing tools, spatial\nintegration algorithms...) and the data module (making use of matplotlib\nfor pre-defined interactive figures). Using profiling tools, the\nnumerical core of the geometry module was optimized and parallelized\nrecently in ``Cython`` making the code more than ten thousand times\nfaster than the previous version on some test cases. Memory usage has\nalso been reduced by half on the largest test cases.\n\nsee `ToFu <https://github.com/ToFuProject/tofu>`__\n\nWe present an open-source parallelized and cythonized python library,\nToFu, for modeling tomography diagnostics on nuclear fusion reactors.\nIts functionalities (with realistic examples), its architecture and its\ndesign will be shown.\n",
  "duration": 1699,
  "language": "eng",
  "recorded": "2019-09-04",
  "speakers": [
    "Didier VEZINET",
    "Laura Mendoza"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/XlHtHPC7TPA/hqdefault.jpg",
  "title": "ToFu - an open-source python/cython library for synthetic tomography diagnostics on Tokamaks",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=XlHtHPC7TPA"
    }
  ]
}
