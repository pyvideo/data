{
  "copyright_text": null,
  "description": "Want static type checking in run time? Want to use standard python type annotations? Want compatibility with standard python dataclasses? Then it sounds like pydantic is something for you. Pydantic offers a pythonic way to validate your user data using run-time enforced standard type-annotations.\n\nThis talk focuses on how Pydantic can be used with web APIs to simplify many parts regarding user input validation. I\u2019ve previously back in early 2018 built a similar solution to Pydantic based upon standard dataclasses for a large B2B SaaS application built with flask. When I left that project I was briefly considered rebuilding it as open-source but while doing my research I discovered Pydantic\u2019s powers which I had put in my keep tabs on the list when it was in a much earlier stage, but at this point, it had evolved to a polished library and a perfect companion for JSON-based APIs.\n\nSlides: https://slides.com/hultner/pycon-us-2021",
  "duration": 1582,
  "language": "eng",
  "recorded": "2021-05-14",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://us.pycon.org/2021/schedule/"
    },
    {
      "label": "https://slides.com/hultner/pycon-us-2021",
      "url": "https://slides.com/hultner/pycon-us-2021"
    }
  ],
  "speakers": [
    "Alexander Hultn\u00e9r"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi_webp/W7f52FhfYqQ/maxresdefault.webp",
  "title": "Intro to Pydantic, run-time type checking for your dataclasses",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=W7f52FhfYqQ"
    }
  ]
}
