{
  "description": "www.pydata.org\n\nMany organizations are eager to build and deploy their own large language models (LLMs), but validating them can feel frustrating and incomplete. Fortunately, as data scientists we are experts in model diagnostics, and we can extend these same principles to LLM validation. In this talk, I will present a scientific approach to evaluating custom text generation models in Python across several dimensions such as safety, coherence, and correctness.\n\nPyData is an educational program of NumFOCUS, a 501(c)3 non-profit organization in the United States. PyData provides a forum for the international community of users and developers of data analysis tools to share ideas and learn from each other. The global PyData network promotes discussion of best practices, new approaches, and emerging technologies for data management, processing, analytics, and visualization. PyData communities approach data science using many languages, including (but not limited to) Python, Julia, and R. \n\nPyData conferences aim to be accessible and community-driven, with novice to advanced level presentations. PyData tutorials and talks bring attendees the latest project features along with cutting-edge use cases.\n\n00:00 Welcome!\n00:10 Help us add time stamps or captions to this video! See the description for details.\n\nWant to help add timestamps to our YouTube videos to help with discoverability? Find out more here: https://github.com/numfocus/YouTubeVideoTimestamps",
  "duration": 1763,
  "language": "eng",
  "recorded": "2024-12-03",
  "related_urls": [
    {
      "label": "Conference Website",
      "url": "https://pydata.org/global2024"
    },
    {
      "label": "https://github.com/numfocus/YouTubeVideoTimestamps",
      "url": "https://github.com/numfocus/YouTubeVideoTimestamps"
    }
  ],
  "speakers": [
    "Patrick Deziel"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/vxSRIL1WD9g/maxresdefault.jpg",
  "title": "Putting the data science back into LLM evaluation",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=vxSRIL1WD9g"
    }
  ]
}
