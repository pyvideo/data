{
  "description": "[EuroPython 2023 \u2014 Forum Hall on 2023-07-21]\n\rhttps://ep2023.europython.eu/session/subclassing-composition-python-and-you\n\nEver seen a code base where understanding a simple method meant jumping through tangled class hierarchies? We all have! And while \"Favor composition over inheritance!\" is almost as old as object-oriented programming, strictly avoiding all types of subclassing leads to verbose, un-Pythonic code. So, what to do?\n\n\rThe discussion on composition vs. inheritance is so frustrating because far-reaching design decisions like this can only be made with the ecosystem in mind \u2013 and because there's more than one type of subclassing!\n\n\rLet's take a dogma-free stroll through the types of subclassing through a Pythonic lens and untangle some patterns and trade-offs together. By the end, you'll be more confident in deciding when subclassing will make your code more Pythonic and when composition will improve its clarity.\n\nThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License http://creativecommons.org/licenses/by-nc-sa/4.0/",
  "duration": 2699,
  "language": "eng",
  "recorded": "2023-07-17",
  "related_urls": [
    {
      "label": "Conference Website",
      "url": "https://ep2023.europython.eu/"
    },
    {
      "label": "https://ep2023.europython.eu/session/subclassing-composition-python-and-you",
      "url": "https://ep2023.europython.eu/session/subclassing-composition-python-and-you"
    },
    {
      "label": "http://creativecommons.org/licenses/by-nc-sa/4.0/",
      "url": "http://creativecommons.org/licenses/by-nc-sa/4.0/"
    }
  ],
  "speakers": [
    "Hynek Schlawack"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/2qpW1-7TnzA/maxresdefault.jpg",
  "title": "Subclassing, Composition, Python, and You",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=2qpW1-7TnzA"
    }
  ]
}
