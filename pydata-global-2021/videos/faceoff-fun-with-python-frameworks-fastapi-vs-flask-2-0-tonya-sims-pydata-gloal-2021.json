{
  "description": "Faceoff Fun with Python Frameworks: FastAPI vs Flask 2.0\nSpeaker: Tonya Sims\n\nSummary\nOur faceoff between FastAPI and Flask 2.0 helps lead you to victory when you need to choose between web frameworks. To avoid wasting time, we help you discover the pros and cons of each. You\u2019ll see a side-by-side comparison of features that will empower you to feel productive in your development quest.\n\nDescription\n\u201cAll the cool kids are using FastAPI for API development.\u201d Imagine hearing this, just as you start getting more comfortable using other frameworks, like Python\u2019s Django or Flask, to build out your API\u2019s. Ladies and gentlemen, there\u2019s a new kid on the block and in this talk, there\u2019s going to be an epic face-off between FastAPI and Flask 2.0.\n\nWhat is Flask?\n\nFlask is a micro web framework built for Python designed to get your application up and running quickly. It\u2019s lightweight and used by many different well known projects.\n\nWhat is Fast API?\n\nFast API (aka the new kid) is a modern Python web framework that takes all your favorite features from other tools and combines them into one. It was built for speed, rapid development, and enhanced developer experience.\n\nWe\u2019ll do a side by side comparison of the two frameworks including features and code structure, using a REST API. By the end of the faceoff, you\u2019ll have a much better understanding of which one you\u2019ll use in your next project.\n\nLet\u2019s analyze the pros and cons of each and why you\u2019d use one over the other. You may even find a lot of similarities between the two and some contrast as well. You\u2019ll see different categories of features for the frameworks and a winner will be chosen for each.\n\nFinally, no matter which you prefer, FastAPI and Flask 2.0 are both great choices for API development, so let\u2019s have fun and let the face-off begin.\n\nTonya Sims's Bio\nVoted into the Wisconsin Basketball Hall of Fame, former professional and collegiate basketball player turned Pythonista Tonya Sims is currently a Python Developer Advocate at Vonage.\n\nShe considers herself to be humble and down to earth as well as having a great deal of empathy. An eclectic background in business, pharmaceutical sales, and as a self-taught developer, has allowed her to see the world from many different perspectives.\n\nTonya started her technology career working as an executive assistant for a leading financial investments company in their IT department. She transitioned into a computer operator role and started learning how to code. Eventually, she worked her way up from an entry-level position to earn roles as a software engineer in test and software developer contracting with some of the top financial services companies in Chicago.\n\nShe is passionate about helping other budding engineers and loves to see people succeed. When she\u2019s not working she enjoys playing the piano, watching documentaries, and listening to music.\n\nGitHub: https://github.com/geekchick/\nTwitter: https://twitter.com/tonyasims/\nLinkedIn: https://www.linkedin.com/in/tonyasims/\n\nPyData Global 2021\nWebsite: https://pydata.org/global2021/\nLinkedIn: https://www.linkedin.com/company/pydata-global\nTwitter: https://twitter.com/PyData\n\nwww.pydata.org\n\nPyData is an educational program of NumFOCUS, a 501(c)3 non-profit organization in the United States. PyData provides a forum for the international community of users and developers of data analysis tools to share ideas and learn from each other. The global PyData network promotes discussion of best practices, new approaches, and emerging technologies for data management, processing, analytics, and visualization. PyData communities approach data science using many languages, including (but not limited to) Python, Julia, and R. \n\nPyData conferences aim to be accessible and community-driven, with novice to advanced level presentations. PyData tutorials and talks bring attendees the latest project features along with cutting-edge use cases.\n\n00:00 Welcome!\n00:10 Help us add time stamps or captions to this video! See the description for details.\n\nWant to help add timestamps to our YouTube videos to help with discoverability? Find out more here: https://github.com/numfocus/YouTubeVideoTimestamps",
  "duration": 1706,
  "language": "eng",
  "recorded": "2021-10-28",
  "related_urls": [
    {
      "label": "Conference Website",
      "url": "https://pydata.org/global2021/"
    },
    {
      "label": "https://www.linkedin.com/company/pydata-global",
      "url": "https://www.linkedin.com/company/pydata-global"
    },
    {
      "label": "https://twitter.com/tonyasims/",
      "url": "https://twitter.com/tonyasims/"
    },
    {
      "label": "https://github.com/numfocus/YouTubeVideoTimestamps",
      "url": "https://github.com/numfocus/YouTubeVideoTimestamps"
    },
    {
      "label": "https://twitter.com/PyData",
      "url": "https://twitter.com/PyData"
    },
    {
      "label": "https://github.com/geekchick/",
      "url": "https://github.com/geekchick/"
    },
    {
      "label": "https://www.linkedin.com/in/tonyasims/",
      "url": "https://www.linkedin.com/in/tonyasims/"
    },
    {
      "label": "https://pydata.org/global2021/",
      "url": "https://pydata.org/global2021/"
    }
  ],
  "speakers": [
    "Tonya Sims"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi_webp/xSnsAFGZaEw/maxresdefault.webp",
  "title": "Faceoff Fun with Python Frameworks: FastAPI vs Flask 2.0",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=xSnsAFGZaEw"
    }
  ]
}
