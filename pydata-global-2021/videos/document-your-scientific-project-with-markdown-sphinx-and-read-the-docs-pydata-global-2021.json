{
  "description": "Document Your Scientific Project With Markdown, Sphinx, and Read the Docs\nSpeakers: Juan Luis Cano Rodr\u00edguez\n\nSummary\nLet's be honest: we like the projects we use to be well-documented, but we almost never have time to document ours. How can we make writing documentation for our Data Science project be as pleasant as possible?\n\nIn this workshop you will document a Data Science project using Sphinx, leveraging Markdown and Jupyter notebooks, and we will deploy the result to Read the Docs.\n\nDescription\nThe talk will loosely follow the structure of the official Sphinx tutorial, using Markdown instead of reStructuredText to be more approachable for contributors:\n\n-1. Creating your Sphinx project (15 minutes)\n\nTutorial introduction, basic project scaffolding using sphinx-quickstart, explanation of the different files that were created.\n\n-2. MyST vs reStructuredText (5 minutes)\n\nDifferences between the two markup languages, current status of the ecosystem, pros and cons.\n\n-3. Write Markdown, build HTML (15 minutes)\n\nFirst steps writing prose documentation using MyST, a flavor of Markdown compatible with Sphinx that adds roles and directives from reStructuredText. Building of HTML documentation using the Sphinx Makefile.\n\n-4. Customizing Sphinx (10 minutes)\n\nEnabling extensions: sphinx.ext.durations to measure performance, furo to use different HTML themes.\n\n-5. Adding cross references (10 minutes)\n\nAdding cross references to other pages of the documentation, specific targets, and objects outside our own project using intersphinx.\n\n-6. Integrating Jupyter notebooks (10 minutes)\n\nUsing Jupyter notebooks as pages for the Sphinx documentation, tips and tricks for interactive widgets.\n\n-7. Documenting code automatically (15 minutes)\n\nLeveraging Sphinx code documentation capabilities. Using autodoc to integrate docs from Python docstrings.\n\n-8. Deploying to Read the Docs (10 minutes)\n\nCreating a project on Read the Docs for automatic deployment of the documentation. Enabling pull request reviews.\n\nJuan Luis Cano Rodr\u00edguez's Bio\nJuan Luis Cano is an Aerospace Engineer with a passion for scientific computing, applied math, programming, education, and outreach. He works as Developer Advocate at Read the Docs, where he works with scientific projects to improve their documentation. He has worked as a software engineer in the space, consulting, and banking industries, and as a Python trainer for several private and public entities.\n\nApart from being a long-time user and contributor to many projects in the scientific Python stack (NumPy, SciPy, Astropy) he has published several open-source packages, the most important one being poliastro, an open-source Python library for Orbital Mechanics used in academia and industry.\n\nFinally, Juan Luis is the founder and former chair of the Python Espa\u00f1a association, the point of contact for the Spanish Python community, and former organizer of PyCon Spain, which attracted more than 800 attendees in its last in-person edition in 2019.\n\nGitHub: https://github.com/astrojuanlu/\nTwitter: https://twitter.com/juanluisback/\nLinkedIn: https://www.linkedin.com/in/juanluiscanor/\n\nPyData Global 2021\nWebsite: https://pydata.org/global2021/\nLinkedIn: https://www.linkedin.com/company/pydata-global\nTwitter: https://twitter.com/PyData\n\nwww.pydata.org\n\nPyData is an educational program of NumFOCUS, a 501(c)3 non-profit organization in the United States. PyData provides a forum for the international community of users and developers of data analysis tools to share ideas and learn from each other. The global PyData network promotes discussion of best practices, new approaches, and emerging technologies for data management, processing, analytics, and visualization. PyData communities approach data science using many languages, including (but not limited to) Python, Julia, and R. \n\nPyData conferences aim to be accessible and community-driven, with novice to advanced level presentations. PyData tutorials and talks bring attendees the latest project features along with cutting-edge use cases.\n\n00:00 Welcome!\n00:10 Help us add time stamps or captions to this video! See the description for details.\n\nWant to help add timestamps to our YouTube videos to help with discoverability? Find out more here: https://github.com/numfocus/YouTubeVideoTimestamps",
  "duration": 4797,
  "language": "eng",
  "recorded": "2021-10-28",
  "related_urls": [
    {
      "label": "Conference Website",
      "url": "https://pydata.org/global2021/"
    },
    {
      "label": "https://www.linkedin.com/company/pydata-global",
      "url": "https://www.linkedin.com/company/pydata-global"
    },
    {
      "label": "https://github.com/astrojuanlu/",
      "url": "https://github.com/astrojuanlu/"
    },
    {
      "label": "https://twitter.com/juanluisback/",
      "url": "https://twitter.com/juanluisback/"
    },
    {
      "label": "https://github.com/numfocus/YouTubeVideoTimestamps",
      "url": "https://github.com/numfocus/YouTubeVideoTimestamps"
    },
    {
      "label": "https://twitter.com/PyData",
      "url": "https://twitter.com/PyData"
    },
    {
      "label": "https://www.linkedin.com/in/juanluiscanor/",
      "url": "https://www.linkedin.com/in/juanluiscanor/"
    },
    {
      "label": "https://pydata.org/global2021/",
      "url": "https://pydata.org/global2021/"
    }
  ],
  "speakers": [
    "Juan Luis Cano Rodr√≠guez"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi_webp/qRSb299awB0/maxresdefault.webp",
  "title": "Document Your Scientific Project with Markdown, Sphinx and Read the Docs",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=qRSb299awB0"
    }
  ]
}
