{
  "description": "Serving BERT Models in Production with TorchServe\nSpeakers: Adway Dhillon, Nidhin Pattaniyil\n\nSummary\nThis talk is for a data scientist or ML engineer looking to serve their PyTorch models in production.\n\nIt will cover post training steps that should be taken to optimize the model such as quantization and torch script.\n\nIt will also walk the user in packaging and serving the model through Facebook\u2019s TorchServe.\n\nDescription\nIntro (10 mins).\n- Introduce the deep learning BERT model.\n- Walk over the notebooks on Google Collab Setup.\n- Show the end model served along with sample inference.\n\nReview Some Deep Learning Concepts (10 mins) - Review sample trained PyTorch model code - Review sample model transformer architecture - Tokenization / pre and post processing\n\nOptimizing the model (30 mins) - Two modes of PyTorch: eager vs script mode\n- Benefits of script mode and PyTorch JIT - Post training optimization methods: static and dynamic quantization, distillation - Hands on: - Quantizing model - Converting the Bert model with torch script\n\nDeploying the model (30 mins) - Overview of deployment options : Pure flask app vs model servers like Torch Serve / TF-Serving - Benefits of Torch Serve: high performance serving, multi model serving, model version for A/B testing, server side batching, support for pre and post processing - Exploring the built in model handlers and how to write your own - Managing the model through management api - Exploring built and custom metrics provided by Torch Serve - Hands on : - Package the given model using Torch Model Archive - Write a custom handler to support pre processing and post processing\n\nLessons Learned: (10min) - share some performance benchmarks of model served at Walmart Search - future next steps\n\nQ&A (5 mins)\n\nAdway Dhillon's Bio\nSoftware and Machine Learning Engineer at Walmart Labs\nGitHub: https://github.com/adwaydhillon/\nLinkedIn: https://www.linkedin.com/in/adwaydhillon/\n\nNidhin Pattaniyil's Bio\nSenior Machine Learning Engineer at Walmart Labs\nGitHub: https://github.com/npatta01/\nTwitter: https://twitter.com/npatta01/\nLinkedIn: https://www.linkedin.com/in/nidhinpattaniyil/\nWebsite: https://npatta01.github.io//\n\nPyData Global 2021\nWebsite: https://pydata.org/global2021/\nLinkedIn: https://www.linkedin.com/company/pydata-global\nTwitter: https://twitter.com/PyData\n\nwww.pydata.org\n\nPyData is an educational program of NumFOCUS, a 501(c)3 non-profit organization in the United States. PyData provides a forum for the international community of users and developers of data analysis tools to share ideas and learn from each other. The global PyData network promotes discussion of best practices, new approaches, and emerging technologies for data management, processing, analytics, and visualization. PyData communities approach data science using many languages, including (but not limited to) Python, Julia, and R. \n\nPyData conferences aim to be accessible and community-driven, with novice to advanced level presentations. PyData tutorials and talks bring attendees the latest project features along with cutting-edge use cases.\n\n00:00 Welcome!\n00:10 Help us add time stamps or captions to this video! See the description for details.\n\nWant to help add timestamps to our YouTube videos to help with discoverability? Find out more here: https://github.com/numfocus/YouTubeVideoTimestamps",
  "duration": 3993,
  "language": "eng",
  "recorded": "2021-10-28",
  "related_urls": [
    {
      "label": "Conference Website",
      "url": "https://pydata.org/global2021/"
    },
    {
      "label": "https://www.linkedin.com/in/adwaydhillon/",
      "url": "https://www.linkedin.com/in/adwaydhillon/"
    },
    {
      "label": "https://www.linkedin.com/company/pydata-global",
      "url": "https://www.linkedin.com/company/pydata-global"
    },
    {
      "label": "https://github.com/numfocus/YouTubeVideoTimestamps",
      "url": "https://github.com/numfocus/YouTubeVideoTimestamps"
    },
    {
      "label": "https://twitter.com/npatta01/",
      "url": "https://twitter.com/npatta01/"
    },
    {
      "label": "https://github.com/adwaydhillon/",
      "url": "https://github.com/adwaydhillon/"
    },
    {
      "label": "https://github.com/npatta01/",
      "url": "https://github.com/npatta01/"
    },
    {
      "label": "https://npatta01.github.io//",
      "url": "https://npatta01.github.io//"
    },
    {
      "label": "https://twitter.com/PyData",
      "url": "https://twitter.com/PyData"
    },
    {
      "label": "https://www.linkedin.com/in/nidhinpattaniyil/",
      "url": "https://www.linkedin.com/in/nidhinpattaniyil/"
    },
    {
      "label": "https://pydata.org/global2021/",
      "url": "https://pydata.org/global2021/"
    }
  ],
  "speakers": [
    "Adway Dhillon",
    "Nidhin Pattaniyil"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/sDGxzkOvxqY/maxresdefault.jpg",
  "title": "Serving BERT Models in Production with TorchServe",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=sDGxzkOvxqY"
    }
  ]
}
