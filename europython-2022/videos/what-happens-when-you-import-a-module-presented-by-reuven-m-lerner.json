{
  "description": "EuroPython 2022 - What happens when you import a module? - presented by Reuven M. Lerner\n\n[The Auditorium on 2022-07-13]\n\n\nModules are a key feature of Python, allowing us to easily reuse our own code and take advantage of publicly available modules from PyPI. It's a rare program that doesn't include at least one \"import\" statement. But what actually happens when we import a module? How does Python find our file? How does it decide whether it should even try to find our module? And after it finds our module file, how does Python load it into memory, assigning to its attributes?\n\nIn this talk, I'll walk you through what happens when you \"import\" a module into Python. The mechanism is surprisingly complex, in no small part because it has to take so many possibilities into consideration. We'll talk about finders and loaders, and about the many ways in which you can customize the module-loading mechanism if you find a need to do so.\n\nIf you've ever imported a module, then this talk will pull back the curtain a bit, helping you to understand what's happening under the hood.\n\nThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License http://creativecommons.org/licenses/by-nc-sa/4.0/",
  "duration": 1747,
  "language": "eng",
  "recorded": "2022-07-11",
  "related_urls": [
    {
      "label": "Conference Website",
      "url": "https://ep2022.europython.eu/"
    },
    {
      "label": "http://creativecommons.org/licenses/by-nc-sa/4.0/",
      "url": "http://creativecommons.org/licenses/by-nc-sa/4.0/"
    }
  ],
  "speakers": [
    "Reuven M. Lerner"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/Aty6rJIvpfU/maxresdefault.jpg",
  "title": "What happens when you import a module?",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=Aty6rJIvpfU"
    }
  ]
}
