{
  "description": "EuroPython 2022 - Property-based testing the Python way - presented by Emma Saroyan\n\n[Liffey Hall 2 on 2022-07-13]\n\n\nThis is an introductory talk about property-based testing. The talk requires some previous knowledge about testing to make the most out of it but if you are new and curious I think you would get something out of it.\n\nThe talk approaches a simple problem from two different testing perspectives. Giving you an idea about property-based testing and how it\u2019s different from the traditional approach with Python. \n\nThe main focus of the topic would be Hypothesis and how you can achieve your testing goals with it. \n\nBy the end of this talk you would have a solid understanding of property-based testing with Hypothesis, that would help you decide which testing approach fits your need. \n\n\nGiven below is a rough overview of the talk structure:\n\n- The testing problem - This is where you would explain the problem statement \n- The traditional approach\n- Cons of traditional approach\n- What is property-based testing ? \n- Intro to Hypothesis \n- Same problem solution with Hypothesis\n- Why choose Hypothesis as a go-to property based testing tool ? \n- Parametrized testing with Pytest vs Hypothesis approach \n- When or when not to use property based testing \n- How can you adopt `hypothesis` in your code base ? Some opinions here.\"\n\nThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License http://creativecommons.org/licenses/by-nc-sa/4.0/",
  "duration": 1866,
  "language": "eng",
  "recorded": "2022-07-11",
  "related_urls": [
    {
      "label": "Conference Website",
      "url": "https://ep2022.europython.eu/"
    },
    {
      "label": "http://creativecommons.org/licenses/by-nc-sa/4.0/",
      "url": "http://creativecommons.org/licenses/by-nc-sa/4.0/"
    }
  ],
  "speakers": [
    "Emma Saroyan"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/EQjZgwufkYU/maxresdefault.jpg",
  "title": "Property-based testing the Python way",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=EQjZgwufkYU"
    }
  ]
}
