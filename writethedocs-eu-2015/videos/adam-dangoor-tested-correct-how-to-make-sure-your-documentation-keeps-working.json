{
  "copyright_text": null,
  "description": "When you are writing documentation for software, a top priority is\nsurely that what you write is correct. That is, the examples you provide\ngive the output you say they will. Or perhaps it is that the links in\nyour documentation link to an expected page. Usually this is done with\nmanual testing at the time of writing. Your organisation may have\npractices in place to make sure that these examples don't get too out of\ndate - maybe someone checks them periodically, maybe code review comes\nwith comments like \"I remember that this part of the code is used in an\nexample on Page 37 of our docs, change it\". But these methods are\ntedious and flawed. This talk will give examples from my work as a\nsoftware engineer in creating tested snippets for documentation which\nare linked to the code they represent. It will show how using techniques\ntraditionally reserved for software testing can ease the burden of\nkeeping documentation up to date.\n",
  "duration": 1427,
  "language": "eng",
  "recorded": "2015-08-31",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "http://www.writethedocs.org/conf/eu/2015/schedule/"
    }
  ],
  "speakers": [
    "Adam Dangoor"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/PoVwyPipHzc/hqdefault.jpg",
  "title": "Tested and Correct, How to Make Sure Your Documentation Keeps Working",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=PoVwyPipHzc"
    }
  ]
}
