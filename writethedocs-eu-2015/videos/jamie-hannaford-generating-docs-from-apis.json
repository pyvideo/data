{
  "copyright_text": null,
  "description": "APIs define contracts between a service and a client, and with the rise\nof representation languages like Swagger, Apiary, and RAML, these\ncontracts can be consumed programmatically and adapted easily into our\ncodebases. Other tools like JSON Schema also contribute to this idea of\nintegration between service and client.\n\nBut what about our documentation? If API contracts can be assimilated\ninto software, surely it can drive our documentation too? In this talk,\nI want to introduce some of the techniques I've used on past projects\nthat allow exactly that. By using remote schemas to generate software,\nit also allows us to generate working documentation that is always\nrelevant and never out of date. Apart from accuracy, we also get the\nadded benefits of reduced development time, reduced effort, and reduced\nduplication. We can all of this by documenting once, and re-using across\nmultiple projects!\n",
  "duration": 1795,
  "language": "eng",
  "recorded": "2015-08-31",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "http://www.writethedocs.org/conf/eu/2015/schedule/"
    }
  ],
  "speakers": [
    "Jamie Hannaford"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/iCQkhSXGfOU/hqdefault.jpg",
  "title": "Generating docs from APIs",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=iCQkhSXGfOU"
    }
  ]
}
