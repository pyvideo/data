{
  "description": "This is an introductory and hands-on guided tutorial of Ray2.0 that covers an introductory, hands-on coding tour through the core features of Ray, which provides powerful yet easy-to-use design patterns for implementing distributed systems in Python. This tutorial includes a brief talk to provide an overview of concepts, why Ray for distributing Python and Machine Learning workloads, and a brief discussion on Ray AIR.\n\nAn introduction to Ray (https://www.ray.io/), the system for scaling your Python and machine learning applications from a laptop to a cluster. We'll start with a hands-on exploration of the core Ray API for distributed workloads, covering basic distributed Ray 2.0 Core API patterns, and then move on to a quick introduction to Ray AIR.\n\n-Remote Python functions as tasks\n-Remote objects as futures\n-Remote Python classes as stateful actors\n-Quick introduction to Ray AIR\n\nKey takeaways:\n-Understand what the Ray 2.0 is and why to use it\n-Learn about Ray Core basic Python APIs\n-Use Ray APIs to convert Python functions and classes into distributed stateless and stateful tasks\n-Use Dashboard for inspection\n-Learn about Ray AIR for building end-to-end ML applications\n\nTo follow this tutorial in class, follow the instructions on how to setup your laptop.\nhttps://github.com/dmatrix/ray-core-tutorial\n\nBio:\nJules S. Damji\nRichard Liaw is an engineering manager at Anyscale, where he leads a team in building open source libraries on top of Ray. He is on leave from the PhD program at UC Berkeley, where he worked at the RISELab advised by Ion Stoica, Joseph Gonzalez, and Ken Goldberg. In his time in the PhD program, he was part of the Ray team, building scalable ML libraries on top of Ray.\n\nJules S. Damji is a lead developer advocate at Anyscale and an MLflow contributor. He is a hands-on developer with over 20 years of experience and has worked at leading companies such as Sun Microsystems, Netscape, @Home, Opsware/Loudcloud, VeriSign, ProQuest, Hortonworks, and Databricks, building large-scale distributed systems. He holds a BSc and MSc in computer science (from Oregon State University and Cal State, Chico, respectively), and an MA in political advocacy and communication (from Johns Hopkins University).\n\n===\n\nwww.pydata.org\n\nPyData is an educational program of NumFOCUS, a 501(c)3 non-profit organization in the United States. PyData provides a forum for the international community of users and developers of data analysis tools to share ideas and learn from each other. The global PyData network promotes discussion of best practices, new approaches, and emerging technologies for data management, processing, analytics, and visualization. PyData communities approach data science using many languages, including (but not limited to) Python, Julia, and R. \n\nPyData conferences aim to be accessible and community-driven, with novice to advanced level presentations. PyData tutorials and talks bring attendees the latest project features along with cutting-edge use cases.\n\n00:00 Welcome!\n00:10 Help us add time stamps or captions to this video! See the description for details.\n\nWant to help add timestamps to our YouTube videos to help with discoverability? Find out more here: https://github.com/numfocus/YouTubeVideoTimestamps",
  "duration": 5383,
  "language": "eng",
  "recorded": "2022-11-09",
  "related_urls": [
    {
      "label": "Conference Website",
      "url": "https://pydata.org/nyc2022/"
    },
    {
      "label": "https://github.com/dmatrix/ray-core-tutorial",
      "url": "https://github.com/dmatrix/ray-core-tutorial"
    },
    {
      "label": "https://github.com/numfocus/YouTubeVideoTimestamps",
      "url": "https://github.com/numfocus/YouTubeVideoTimestamps"
    },
    {
      "label": "https://www.ray.io/",
      "url": "https://www.ray.io/"
    }
  ],
  "speakers": [
    "TODO"
  ],
  "tags": [
    "Education",
    "Julia",
    "NumFOCUS",
    "Opensource",
    "PyData",
    "Python",
    "Tutorial",
    "coding",
    "how to program",
    "learn",
    "learn to code",
    "python 3",
    "scientific programming",
    "software"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/XjmbKkc98MA/maxresdefault.jpg",
  "title": "Distributed Python with Ray-Hands on with the Ray 2.0 APIs for scaling Python Workloads | PDNYC 2022",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=XjmbKkc98MA"
    }
  ]
}
