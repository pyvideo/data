{
  "alias": "video/1932/version-control-and-unit-testing-for-scientific-s",
  "category": "SciPy 2013",
  "copyright_text": "https://www.youtube.com/t/terms",
  "description": "",
  "duration": null,
  "id": 1932,
  "language": "eng",
  "quality_notes": "",
  "recorded": "2013-06-27",
  "related_urls": [
    "http://software-carpentry.org/",
    "http://software-carpentry.org/blog/2011/11/knowledge-of-the-second-kind.html",
    "http://software-carpentry.org/blog/2012/02/trieste-italy-workshop-week-1.html",
    "http://software-carpentry.org/blog/2012/04/lessons-learned-at-the-university-of-chicago.html",
    "https://code.google.com/p/hacker-within/w/list",
    "https://github.com/swcarpentry/boot-camps",
    "https://github.com/swcarpentry/boot-camps/tree/master/python/sw\\_engineering",
    "https://github.com/swcarpentry/boot-camps/tree/master/version-control/git/git-and-github",
    "https://github.com/thehackerwithin/PyTrieste/wiki"
  ],
  "slug": "version-control-and-unit-testing-for-scientific-s",
  "speakers": [
    "Matt Davis",
    "Katy Huff"
  ],
  "summary": "Presenters: Matt Davis, Katy Huff\n\nDescription\n\nWriting software can be a frustrating process but developers have come\nup with ways to make it less stressful and error prone. Version control\nsaves the history of your project and makes it easier for multiple\npeople to participate in development. Unit testing and testing\nframeworks help ensure the correctness of your code and help you find\nerrors by quickly executing and testing your entire code base. These\ntools can save you time and stress and are valuable to anyone writing\nsoftware of any description.\n\nThis collaborative, hands-on tutorial will cover version control with\nGit plus writing and running unit tests in Python (and IPython!) using\nthe nose testing framework. Attendees should be comfortable with the\nbasics of Python and the command line but no experience with scientific\nPython is necessary.\n\nOutline\n\nThe tutorial will be split into two two-hour lessons. The first lesson\nwill cover git/GitHub and the second lesson will cover unit testing.\nThroughout the entirety of the tutorial students will be working in\npairs. Our teaching style is to have frequent, short exercises for\nstudents. Ideally instructors aren't talking for more than a few minutes\nbefore they stop and students do something on their own machines.\nInstructors then give an explanation and example, then move on to the\nnext item.\n\nLesson 1: git/GitHub\n\nStudents will work in pairs and in each pair one student will make a\nGitHub repo, then give the other student commit access on that repo.\nStudents will take turns making modifications to learn various bits of\ngit functionality.\n\nLesson 2: Unit Testing\n\nContinuing to work in pairs, students will use test driven development\nto construct a small scientific program in the IPython Notebook and then\ntake their work to .py files to see how nose works from the command\nline.\n\nRequired Packages\n\nIn addition to standard Python this tutorial will require the nose\ntesting framework, the IPython Notebook, and the command line interface\nto Git. Installing Git varies by platform. Windows users should install\nGit Bash (aka msysgit), Mac users should install the Mac OS X Command\nLine Tools, and Linux users should use the packaging system for their\nparticular Linux distribution. The Anaconda CE Python installer includes\nnose and the IPython Notebook.\n\nDocumentation\n\nMaterial will be adapted from existing Software Carpentry lessons,\nespecially:\nhttps://github.com/swcarpentry/boot-camps/tree/master/version-control/git/git-and-github\nhttps://github.com/swcarpentry/boot-camps/tree/master/python/sw\\_engineering\n\nOther links: http://software-carpentry.org/ - The software carpentry\norganization with links to many lessons and past boot camps.\nhttps://github.com/swcarpentry/boot-camps - Standard Software Carpentry\nboot camp curriculum. https://github.com/thehackerwithin/PyTrieste/wiki\n- Early Software Carpentry curriculum from a two week boot camp at the\nInternational Center for Theoretical Physics.\nhttps://code.google.com/p/hacker-within/w/list - Lesson notes for a\nthree hour lightning lesson at the American Nuclear Society Conference\n2011.\nhttp://software-carpentry.org/blog/2012/02/trieste-italy-workshop-week-1.html\n- A blog post about the first week of the two week ICTP boot camp.\nhttp://software-carpentry.org/blog/2012/04/lessons-learned-at-the-university-of-chicago.html\n- A blog post about a two day boot camp at the University of Chicago.\nhttp://software-carpentry.org/blog/2011/11/knowledge-of-the-second-kind.html\n- A blog post about what the hacker within did before it was absorbed\ninto Software Carpentry (it's no longer really its own entity).\n",
  "tags": [
    "lightning talks",
    "Tech"
  ],
  "thumbnail_url": "https://i1.ytimg.com/vi/j36U6DTKVDY/hqdefault.jpg",
  "title": "Version Control and Unit Testing for Scientific Software, SciPy2013 Tutorial, Part 3 of 3",
  "videos": [
    {
      "length": 0,
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=j36U6DTKVDY"
    }
  ]
}
