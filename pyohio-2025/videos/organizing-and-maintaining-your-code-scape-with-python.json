{
    "description": "If you're a software engineer, a data scientist, or almost any other\ntype of developer, you're probably familiar with the idea of writing\nwell-organized, reusable code. Principles like DRY (\"Don't Repeat\nYourself\") and ETC (\"Easy to Change\") are powerful heuristics at the\nline-by-line level of code. Design concepts like modularity, decoupling,\nMVC (\"Model-View-Controller\") and \"Fat Model, Skinny Controller\" can\nhelp you make software-level organizing decisions. Resources for\nproject-level organization (code, data, documentation, etc.) are\nabundant and growing fast. Putting all this together in a useful way can\nbe challenging, but there's no shortage of advice, resources, or\ntemplates in any of these areas. By comparison, material related to\neffective organization at the level of the coder's file system or source\ntree is sparse, harder to find, or designed for a more general audience.\nThis talk uses \"code-scape\" as an umbrella term to consolidate ideas\nabout organizing files and folders, maintaining your codebase, building\na second brain, digital filing systems, etc. and shares examples of how\nyou can use lightweight Python scripts to help keep your code-scape\norganized, searchable, and safeguarded.\n",
    "language": "eng",
    "recorded": "2025-07-27",
    "related_urls": [
        {
            "label": "Conference Website",
            "url": "https://www.pyohio.org/2025/"
        },
        {
            "label": "Presentation Webpage",
            "url": "https://www.pyohio.org/2025/program/talks/organizing-and-maintaining-your-code-scape-with-python"
        }
    ],
    "speakers": [
        "Matt Lavin"
    ],
    "thumbnail_url": "https://i.ytimg.com/vi/pD3SwklUD-s/maxresdefault.jpg",
    "title": "Organizing and Maintaining Your Code-Scape with Python",
    "videos": [
        {
            "type": "youtube",
            "url": "https://www.youtube.com/watch?v=pD3SwklUD-s"
        }
    ]
}