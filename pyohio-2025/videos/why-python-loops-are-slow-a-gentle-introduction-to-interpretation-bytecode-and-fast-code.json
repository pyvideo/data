{
    "description": "Python loops are \"slow\", is a phrase every python programmer has heard.\nFor better or worse, it is partially true. This talk breaks down how\nPython executes code and why that creates overhead, especially in tight\nloops. I'll also explore how tools like NumPy, SIMD, and JIT compilation\nachieve massive speedups by working with the CPU instead of against it.\n\nYou should walk away from this talk with more insight into why loops are\nslow, how python code is executed at a high level, and what you should\ndo about it if anything.\n",
    "language": "eng",
    "recorded": "2025-07-27",
    "related_urls": [
        {
            "label": "Conference Website",
            "url": "https://www.pyohio.org/2025/"
        },
        {
            "label": "Presentation Webpage",
            "url": "https://www.pyohio.org/2025/program/talks/why-python-loops-are-slow"
        }
    ],
    "speakers": [
        "Tyler Riccio"
    ],
    "thumbnail_url": "https://i.ytimg.com/vi/r129pNEBtYg/maxresdefault.jpg",
    "title": "Why Python Loops Are \"Slow\": A Gentle Introduction to Interpretation, Bytecode, and Fast Code",
    "videos": [
        {
            "type": "youtube",
            "url": "https://www.youtube.com/watch?v=r129pNEBtYg"
        }
    ]
}