{
  "description": "In 30 years, dunnhumby has built a huge knowledge base. GRAKN.AI is a\npowerful Knowledge Graph database that provides automated reasoning to\nconnect information together and derive powerful insights. The challenge\nis that it has its own query language. We present here a solution based\non NLP and transfer learning that converts any questions into a GRAKN\nquery, making its content accessible to all.\n\n**dunnhumby** , the world\u2019s first data science platform has around 400+\nData Scientist, delivering 1000+ projects yearly using 50+ analytical\nsolutions. This huge knowledge base has an abundance of information\nwhich can be explored to extract useful insights to help employees and\nstakeholders better the processes and progress in right direction.\n\n**GRAKN** : GRAKN.AI is knowledge graph, a database to organise complex\nnetworks of data and make it queryable, by performing knowledge\nengineering. Grakn provides the knowledge foundation for cognitive and\nintelligent (e.g. AI) systems, by providing an intelligent language for\nmodelling, transactions and analytics.\n\n**Graql** : GRAKN\u2019s query language provides an enhanced\nentity-relationship schema to model complex datasets. It performs\nlogical inference through entity and relationship type deductive\nreasoning, as well as rule-based reasoning. This allows the discovery of\nfacts and patterns that would otherwise be too hard to find.\n\n**The issue** : As mentioned above GRAKN has its own query language\ncalled graql. Na\u00efve users cannot efficiently leverage the power of GRAKN\ndirectly due to lack of technical knowledge.\n\nAn example of query to find an expert at the algorithm XGBoost:\n\n::\n\n    match \n    $ expert isa employee, has name $name_expert;\n    $algorithm isa algorithm, has name=\u2019XGBoost\u2019;\n    ($expert, $algorithm) isa leverage;\n    get $name_expert;\n\nBut what if they could express their question or request in their\nnatural language?\n\n**The opportunity** : We have developed a solution which convert the\nnatural language text into GRAKN queries and act as a precursor to the\nGRAKN input interface. Hence making knowledge graphs explorable to users\nwho want to focus on insights rather than technicality.\n\n**Our Solution** : Algorithm is explained below:\n\n1. Take input text string\n2. Identify nouns and verbs from the string by using Word2Vec and\n   Transfer Learning\n3. Infer the nouns in the entity list available in Knowledge database\n4. Similarly, infer verbs in the relations list available in Knowledge\n   database\n5. Also, match exact entity values with the nouns in the database.\n6. Using the collection of similar entity, relations generate a match\n   query containing entity and relations.\n\nEg.\n\n*User*\n\n::\n\n    \u201cTell me who is an expert at \u2018XGBoost\u2019 \u201d\n\n*Text2GQL*\n\n::\n\n    match \n    $ expert isa employee, has name $name_expert;\n    $algorithm isa algorithm, has name=\u2019XGBoost\u2019;\n    ($expert, $algorithm) isa leverage;\n    get $name_expert;\n\n**Future enhancement** : Idea is to make the tool generic which takes\nschema, data source (json) and input string and generates a grakn query\nwhich would be used an input to grakn interface. Also we can use similar\napproach to automate the process of parsing documents and identifying\nentities and relations which could be inserted in the graph database.\n",
  "duration": 1483,
  "language": "eng",
  "recorded": "2019-08-04",
  "speakers": [
    "Suyog Swami"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/S25CEMULDfc/hqdefault.jpg",
  "title": "Knowledge Graph made simple using NLP and Transfer Learning",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=S25CEMULDfc"
    }
  ]
}
