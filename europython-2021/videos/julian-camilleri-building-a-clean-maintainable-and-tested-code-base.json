{
  "description": "Building a clean, maintainable and tested code base\n[EuroPython 2021 - Talk - 2021-07-30 - Optiver]\n[Online]\n\nBy Julian Camilleri\n\nAn introduction to how to write clean code (type hinting, docstrings, inline comments et cetera) and supporting the clean code with maintainable project structure and unit tests.\n\nGoals - with comparisons/examples:\n\n\nWhat's clean, maintainable code? (type hinting, docstrings, inline comments et cetera)\nWhat's a clean, navigatable project structure?\nShould the tests package be nested into each package?\nShould my 'tests' package structure mirror the project structure? (for easy navigation of which module/package is being tested)\n(Testing) What should I test and what shouldn't I test?\n(Testing) When should I mock and when shouldn't I?\n(Testing) Writing clean test cases\n(Testing) Using pytest to utilize parametrize to test multiple combinations, whilst keeping a clean codebase\n\n\n\nLicense: This video is licensed under the CC BY-NC-SA 4.0 license: https://creativecommons.org/licenses/by-nc-sa/4.0/\nPlease see our speaker release agreement for details: https://ep2021.europython.eu/events/speaker-release-agreement/",
  "duration": 1857,
  "language": "eng",
  "recorded": "2021-07-26",
  "related_urls": [
    {
      "label": "Conference Website",
      "url": "https://ep2021.europython.eu/"
    },
    {
      "label": "https://creativecommons.org/licenses/by-nc-sa/4.0/",
      "url": "https://creativecommons.org/licenses/by-nc-sa/4.0/"
    },
    {
      "label": "https://ep2021.europython.eu/events/speaker-release-agreement/",
      "url": "https://ep2021.europython.eu/events/speaker-release-agreement/"
    }
  ],
  "speakers": [
    "Julian Camilleri"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/jnvhUBJTsxQ/sddefault.jpg?sqp=-oaymwEmCIAFEOAD8quKqQMa8AEB-AH-DoACuAiKAgwIABABGBMgMSh_MA8=&rs=AOn4CLAw_n-viAFm-amSQ0m3kkq496mu7g",
  "title": "Building a clean, maintainable and tested code base",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=jnvhUBJTsxQ"
    }
  ]
}
