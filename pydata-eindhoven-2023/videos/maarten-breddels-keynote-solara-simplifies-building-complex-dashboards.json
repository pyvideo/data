{
  "description": "Many Python frameworks are suitable for creating basic dashboards, but struggle with more complex ones. Though many teams default to splitting into separate frontend and backend divisions when faced with increasing dashboard complexity, this approach introduces its own set of challenges, like reduced personnel interchangeability and cumbersome refactoring due to REST API changes.\n\nSolara, our new web framework, addresses these challenges. We use the foundational principles of ReactJS, yet maintain the ease of writing only Python. Solara has a declarative API, designed for dynamic and complex UI's, yet easy to write. Reactive variables power our state management which automatically trigger rerenders. Our component-centric architecture stimulates code reusability, and hot reloading promotes efficient workflows. Together with our rich set of UI and data-focused components, Solara spans the entire spectrum from rapid prototyping to robust, complex dashboards.\n\nWithout modification your application and components will work in Jupyter, Voil\u00e0 and on our standalone server for high scalability. Our server can run along existing FastAPI, Starlette, Flask and even Django servers to integrate with existing web services. We prioritize code quality and developer friendliness by including strong typing and first class support for unit and integration testing.",
  "duration": 2669,
  "language": "eng",
  "recorded": "2023-11-30",
  "related_urls": [
    {
      "label": "Conference Website",
      "url": "https://web.archive.org/web/20240930133013/http://pydata.org/eindhoven2023"
    }
  ],
  "speakers": [
    "Maarten Breddels"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/2MVUZV0icxU/maxresdefault.jpg",
  "title": "Solara simplifies building complex dashboards.",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=2MVUZV0icxU"
    }
  ]
}
