{
  "copyright_text": null,
  "description": "Python has a macro language: it\u2019s Python - PyCon Italia 2022\n\nA small but growing number of Python projects, including ``attrs``,\n``cattrs`` and ``incant``, use Python to generate Python.\n\nWe will example concrete cases of code generation in these libraries and\ngo over the \u2018how\u2019 and the \u2018why\u2019. Macros in mainstream languages are\ngenerally a tool for metaprogramming, probably the most famous examples\nbeing preprocessor directives in C and C++, and Rust macros.\n\nPython has rich metaprogramming capabilities baked in through the\ncompile and eval built-in functions, although a little care needs to be\ntaken for the generated code to be debuggable and properly shown in\ntrack staces.\n\nWe will examine one concrete example of metaprogramming in each of the\nattrs, cattrs and incant libraries.\n\nSpeaker: Tin Tvrtkovic\n",
  "duration": 1427,
  "language": "eng",
  "recorded": "2022-06-03",
  "speakers": [
    "Tin Tvrtkovic"
  ],
  "tags": [
    "compiler and interpreters",
    "performance"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/UYRSixikUTo/maxresdefault.jpg",
  "title": "Python has a macro language: it's Python",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=UYRSixikUTo"
    }
  ]
}