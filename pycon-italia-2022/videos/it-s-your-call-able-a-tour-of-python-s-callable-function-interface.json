{
  "copyright_text": null,
  "description": "It\u2019s Your Call(able): a tour of Python\u2019s callable (function) interface -\nPyCon Italia 2022\n\nA deep dive into python functions and the callable interface surrounding\nthem. We take a tour into everything that happens on on a \u201cdef\u201d line in\nPython, and explore how to make the most of all the rich metadata\nprovided about functions, before going into detail hacking the Python\ndecorator pattern. Functions are fundamental to python, and are amongst\nthe first features of python that most users learn. We call a function\nwith arguments, and it returns a value. However, there is more to this\ncallable interface than meets the eye, and there are lots of useful and\npowerful things we can do with the callable interface. You may have come\nacross many of these already: (anonymous) lambda functions, the **call**\nmagic method, the decorator pattern, the **doc** property, and modules\nlike functools and inspect which provide detailed about functions and\nallow us to alter functions at runtime. The now-retired Python 3.6\nrelease added typing annotations to this mix, and opened up a new world\nof metadata to use alongside your callables.\n\nLots of libraries, particularly web frameworks like Flask, Django, and\nFastAPI, and testing toolkits like pytest, use this callable interface\nto implement their API. As developers, understanding these advanced\nfeatures of python\u2019s callable interface is particularly useful when\nwriting generic, automation focused code, and understanding how such\nprominent libraries work.\n\nThis talk gives a deep-dive into python functions, and the associated\ncallable interface. We\u2019ll start with a quick tour of the basics, before\ncovering python\u2019s more advanced callable features, and exploring some\nexamples about how, why, and when you may wish to use these features\nyourself.\n\nSpeaker: Weldon\n",
  "duration": 1579,
  "language": "eng",
  "recorded": "2022-06-03",
  "speakers": [
    "Weldon"
  ],
  "tags": [
    "clean code",
    "type hinting"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/CgUN4HZ0iHI/maxresdefault.jpg",
  "title": "It's Your Call(able): a tour of Python's callable (function) interface",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=CgUN4HZ0iHI"
    }
  ]
}