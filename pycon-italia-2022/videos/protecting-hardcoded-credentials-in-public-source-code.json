{
  "copyright_text": null,
  "description": "Protecting hardcoded credentials in public source code - PyCon Italia\n2022\n\nHardcoding credentials in source code is a known bad practice, but it is\nstill happening every day, even on public platforms like GitHub.\nCredential Digger is an open source scanning tool that can help\ndevelopers find and remediate to their exposed credentials with a low\nfalse positive rate. Github is now widely adopted in the software\ndevelopment industry as internal and external code hosting, sharing and\nversioning platform. Even if this platform offers advanced code control\nfeatures it remains exposed to security weaknesses. In this talk we will\ndiscuss about Github security concepts and introduce an SAP Open Source\ntool called Credential Digger used to scan Git platforms (GitHub,\nGitLab, BitBucket, etc.) in order to identify hardcoded credentials\n(Passwords, API Keys, Secret Keys, Tokens, personal information,\ninternal domains, etc.). Compared to other secret scanners in the\nmarket, Credential Digger is able to identify passwords with a low false\npositive rate. Thanks to a NLP model we trained for this purpose, we can\nidentify when passwords are fake and when they are real. Together with\nCredential Digger, we also work on a real time Github Organization\nmonitor that analyzes permanently the new commits on the projects of a\nteam, and alerts the owner when a potential secret is shared.\n\nSlides:\n\nSpeaker: Marco Rosa\n",
  "duration": 1579,
  "language": "eng",
  "recorded": "2022-06-03",
  "speakers": [
    "Marco Rosa"
  ],
  "tags": [
    "open source",
    "security"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/NgQGwYXiB3A/maxresdefault.jpg",
  "title": "Protecting hardcoded credentials in public source code",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=NgQGwYXiB3A"
    }
  ]
}