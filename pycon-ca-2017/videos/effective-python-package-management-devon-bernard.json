{
  "description": "This talk showcases various example scenarios around the ins/outs of managing Python packages. Scenarios range from intra-package problems of how to build a package, inter-package problems of how to connect packages, to general usage/environment/setup problems that developers have a hard time debugging. For each of these scenarios, I'll highlight the pros/cons, best practices, and how to overcome the issues developers commonly face.\n\nSome examples: - installing packages from public, local file system, git (ssh + https), and how this affects deployment procedures - handling systems with multiple Python versions or package managers - how app structures and imports can affect testability - relative vs absolute imports - virtual environments - setup scripts - package versioning (why, when, how) - how new code changes could not be taking effect (old .pyc files, or updated import not catching) - handling sub-packages/dependencies that utilize parent configuration files - working with PYTHONPATH - executing python as modules or scripts\n\nPresentation page -- https://2017.pycon.ca/schedule/2/",
  "duration": 1510,
  "recorded": "2017-11-18",
  "language": "en",
  "speakers": [
    "Devon Bernard"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/ASw2htNYa1E/hqdefault.jpg",
  "title": "Effective Python package management",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=ASw2htNYa1E"
    }
  ]
}
