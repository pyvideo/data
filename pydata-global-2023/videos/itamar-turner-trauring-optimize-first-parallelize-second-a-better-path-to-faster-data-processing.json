{
  "description": "www.pydata.org\n\nYou\u2019re processing a large amount of data with Python, and your code is too slow.\nOne obvious way to get faster results is adding multithreading or multiprocessing, so you can use multiple CPU cores.\nUnfortunately, switching straight to parallelism is almost always premature, often unnecessary, and sometimes impossible.\nWe'll cover the different goals for performance, why parallelism only achieves one of them, the costs of parallelism, and the alternative: speeding up your code first.\n\nPyData is an educational program of NumFOCUS, a 501(c)3 non-profit organization in the United States. PyData provides a forum for the international community of users and developers of data analysis tools to share ideas and learn from each other. The global PyData network promotes discussion of best practices, new approaches, and emerging technologies for data management, processing, analytics, and visualization. PyData communities approach data science using many languages, including (but not limited to) Python, Julia, and R. \n\nPyData conferences aim to be accessible and community-driven, with novice to advanced level presentations. PyData tutorials and talks bring attendees the latest project features along with cutting-edge use cases.\n\n00:00 Welcome!\n00:10 Help us add time stamps or captions to this video! See the description for details.\n\nWant to help add timestamps to our YouTube videos to help with discoverability? Find out more here: https://github.com/numfocus/YouTubeVideoTimestamps",
  "duration": 1845,
  "language": "eng",
  "recorded": "2023-12-06",
  "related_urls": [
    {
      "label": "Conference Website",
      "url": "https://pydata.org/global2023/"
    },
    {
      "label": "https://github.com/numfocus/YouTubeVideoTimestamps",
      "url": "https://github.com/numfocus/YouTubeVideoTimestamps"
    }
  ],
  "speakers": [
    "Itamar Turner-Trauring"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/exaNWuIuqec/maxresdefault.jpg",
  "title": "Optimize first, parallelize second: a better path to faster data processing",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=exaNWuIuqec"
    }
  ]
}
