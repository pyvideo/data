{
  "description": "www.pydata.org\n\nHistorically it's been difficult to reuse existing batch processing code in streaming application.\nBecause of this, ML engineers had to maintain two implementations of their jobs.\nOne for streaming and one for batch.\n\nIn this talk we'll introduce beavers, a stream processing library optimized for analytics.\nIt can be used to run both batch and streaming jobs with minimal code duplication, whilst still being good at both.\n\nPyData is an educational program of NumFOCUS, a 501(c)3 non-profit organization in the United States. PyData provides a forum for the international community of users and developers of data analysis tools to share ideas and learn from each other. The global PyData network promotes discussion of best practices, new approaches, and emerging technologies for data management, processing, analytics, and visualization. PyData communities approach data science using many languages, including (but not limited to) Python, Julia, and R. \n\nPyData conferences aim to be accessible and community-driven, with novice to advanced level presentations. PyData tutorials and talks bring attendees the latest project features along with cutting-edge use cases.\n\n00:00 Welcome!\n00:10 Help us add time stamps or captions to this video! See the description for details.\n\nWant to help add timestamps to our YouTube videos to help with discoverability? Find out more here: https://github.com/numfocus/YouTubeVideoTimestamps",
  "duration": 1714,
  "language": "eng",
  "recorded": "2023-12-06",
  "related_urls": [
    {
      "label": "Conference Website",
      "url": "https://pydata.org/global2023/"
    },
    {
      "label": "https://github.com/numfocus/YouTubeVideoTimestamps",
      "url": "https://github.com/numfocus/YouTubeVideoTimestamps"
    }
  ],
  "speakers": [
    "Arthur Andres"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/8pUwsGA8SQM/maxresdefault.jpg",
  "title": "Unified batch and stream processing in python",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=8pUwsGA8SQM"
    }
  ]
}
