{
    "description": "What is the best Pok\u00e9mon team? Who should I pick? What attacks should they learn? Here, I use multi-objective linear programming, and a bit of simulation, to figure it out.\n\nHere I give an example of using Python to solve a combinatorial problem from the mathematical field of Operational Research: How to find the best Pok\u00e9mon team. Using a variety of Python libraries a mulit-objective linear programming problem is used to find the best combination of Pok\u00e9mon, and their attacks. PuLP is used to formulate and solve the multi-objective linear programming problems, and a Pareto front is found by varying the importance of each objective. Then, a third objective, a Pok\u00e9mon team's performance in a Monte Carlo simulation of Pok\u00e9mon battles, is used to differentiate between Pareto optimal solutions and find the definitive best team of Pok\u00e9mon. I relate how this fun problem is related to more serious scheduling and timetabling problems.",
    "language": "eng",
    "recorded": "2023-09-23",
    "related_urls": [
        {
            "label": "Conference Website",
            "url": "https://2023.pyconuk.org/"
        }
    ],
    "speakers": [
        "Geraint Palmer"
    ],
    "thumbnail_url": "https://i.ytimg.com/vi/HVcS_X5p1h8/hqdefault.jpg",
    "title": "Multi-Objective Linear Programming to find the Best Pok\u00e9mon Team",
    "videos": [
        {
            "type": "youtube",
            "url": "https://www.youtube.com/watch?v=HVcS_X5p1h8"
        }
    ]
}