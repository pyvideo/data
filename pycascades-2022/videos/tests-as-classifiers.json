{
  "copyright_text": "CC BY-NC-SA 4.0",
  "description": "The reason to write, and run, tests on the code is to detect bugs before the code is being used by the customer. Too often, this purpose is forgotten when deciding how, and what, to test. What makes a good test? What makes a good test-suite? How can you measure it?\n\nBy modeling tests as a \"classifier\", where the label is \"buggy\" or \"not buggy\", the general theory of classification can be applied. The basics of the theory, such as precision, recall, and F-score, will be explored, as well as how it applies to test suites. Specific techniques for measuring test quality, using tools such as mutation testing, tracing, and CI systems, will be presented.",
  "duration": 1583,
  "language": "eng",
  "recorded": "2022-02-06",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://2022.pycascades.com/program/talks/"
    },
    {
      "label": "Full playlist",
      "url": "https://www.youtube.com/playlist?list=PLcNrB7gPa-NdPI2l70DwtUf8uO_pdXZ6H"
    }
  ],
  "speakers": [
    "Moshe Zadka"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/WRENEJ22hw8/maxresdefault.jpg",
  "title": "Tests as Classifiers",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=WRENEJ22hw8"
    }
  ]
}
