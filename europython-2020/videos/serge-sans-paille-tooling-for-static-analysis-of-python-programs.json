{
  "copyright_text": "This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/\nPlease see our speaker release agreement for details: https://ep2020.europython.eu/events/speaker-release-agreement/\n",
  "description": "\"Tooling for Static Analysis of Python Programs\nEuroPython 2020 - Talk - 2020-07-24 - Brian\nOnline\n\nBy Serge Sans Paille\n\nIn spite of the dynamic nature of their favorite language, some Python developer have a huge desire to statically analyse it. This can indeed be useful for linters, type inference, auto-completion and all the tooling some developers expect from modern IDE.\nWe all know that lazy binding prevents even the simplest function call or attribute lookup to be reliably analyzed. Yet we try. And Python as this fabulous codeast/code module, saving us from writing a parser! Isn't that a strong incentive to do static analysis?\n\nThis talk presents two modules developers can build upon to build such analyzers:\n\nprecode- gast, a generalization of the Python AST that provides a common API for all the variant of the Python AST, from python 2.7 to Python 3.8\n- beniget, an analyzer of the Python AST (built upon gast) that provides a useful and well-known abstraction to understand programs: use-def chains\n/code/pre\n\nBuilt upon these two modules, memestra is a static analyzer of deprecated function calls, developed in partnership with QuantStack. A tool which, given a module, reports any use of deprecated APIs. Let's explore how such a module can be built and unveil the mysteries of static analysis.\n\n\n\nLicense: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/\nPlease see our speaker release agreement for details: https://ep2020.europython.eu/events/speaker-release-agreement/\n\n\"",
  "duration": 1712,
  "language": "eng",
  "recorded": "2020-07-23",
  "related_urls": [
    {
      "label": "Conference Website",
      "url": "https://ep2020.europython.eu/"
    },
    {
      "label": "https://ep2020.europython.eu/events/speaker-release-agreement/",
      "url": "https://ep2020.europython.eu/events/speaker-release-agreement/"
    },
    {
      "label": "https://creativecommons.org/licenses/by-nc-sa/3.0/",
      "url": "https://creativecommons.org/licenses/by-nc-sa/3.0/"
    }
  ],
  "speakers": [
    "Serge Sans Paille"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/_xi213GG89Q/sddefault.jpg",
  "title": "Tooling for Static Analysis of Python Programs",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=_xi213GG89Q"
    }
  ]
}
