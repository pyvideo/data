{
  "copyright_text": "",
  "description": "A software project being called \"reproducible\" can mean a lot of things, but usually includes a description of how and where the code in your project can be run. Often this means including Python virtual environment, a Conda environment, or even a Docker container to help others replicate your work. In this talk I will introduce some of the most common ways the scientific Python community approaches reproducibility, and what are the advantages and disadvantages of the approaches. I will also share a new way that you can make not only your Python code but your development machine reproducible without Docker containers with a tool called Nix. I will also show an example of using a Nix defined operating system (NixOS) with Docker containers to run my home lab.",
  "duration": 1591,
  "language": "eng",
  "recorded": "2024-04-06",
  "related_urls": [
    {
      "label": "Conference schedule",
      "url": "https://2024.pycascades.com/program/schedule/"
    },
    {
      "label": "Full playlist",
      "url": "https://www.youtube.com/playlist?list=PLcNrB7gPa-Ne6QknxKayJaEBsKfkmA72l"
    }
  ],
  "speakers": [
    "Sarah Kaiser"
  ],
  "tags": [],
  "thumbnail_url": "https://i.ytimg.com/vi/acGazOBPpeo/maxresdefault.jpg",
  "title": "I declare an environment! - Reproducibility with and without Docker",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=acGazOBPpeo"
    }
  ]
}
